namespace org.z2legacy.samples.ut.intrinsic.minmax;

class MaxPass01 {
	def @main() {
		val va = Intrinsic.Max(Byte{5}, Byte{20});
		System.Out << va.class << " max is " << va << "\n";
		
		val vb = Intrinsic.Max(Word{50}, Word{200});
		System.Out << vb.class << " max is " << vb << "\n";
		
		val vc = Intrinsic.Max(DWord{500}, DWord{2000});
		System.Out << vc.class << " max is " << vc << "\n";
		
		val vd = Intrinsic.Max(QWord{5000}, QWord{20000});
		System.Out << vd.class << " max is " << vd << "\n";
		
		val ve = Intrinsic.Max(Small{-5}, Small{20});
		System.Out << ve.class << " max is " << ve << "\n";
		
		val vf = Intrinsic.Max(Short{-50}, Short{200});
		System.Out << vf.class << " max is " << vf << "\n";
		
		val vg = Intrinsic.Max(Int{-500}, Int{2000});
		System.Out << vg.class << " max is " << vg << "\n";
		
		val vh = Intrinsic.Max(Long{-5000}, Long{20000});
		System.Out << vh.class << " max is " << vh << "\n";
		
		val vi = Intrinsic.Max(Float{0.4f}, Float{22.1f});
		System.Out << vi.class << " max is " << vi << "\n";
		
		val vj = Intrinsic.Max(Double{0.04000000}, Double{22.01});
		System.Out << vj.class << " max is " << vj << "\n";
		
		val vk = Intrinsic.Max(Char{'a'}, Char{'7'});
		System.Out << vk.class << " max is " << vk << "\n";
	}
}