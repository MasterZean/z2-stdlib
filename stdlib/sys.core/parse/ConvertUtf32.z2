namespace sys.core;

class ConvertUtf32 {
	static def FromUtf8(ref dest: Slice<DWord>, ref src: ReadSlice<Byte>) {
		val s = src.SysDataPointer;
		val l = s + src.Length;
		val d = dest.SysDataPointer;
		
		while (s < l) {
			val code: Word = s*;
			s++;
			
			if (code < 0x80)
				d* = code;
			else if (code < 0xE0) {
				d* = DWord{((code - 0xC0) <<  6) +  (s[0] - 0x80)};
				s++;
			}
			else if (code < 0xF0) {
				d* = DWord{((code - 0xE0) << 12) + ((s[0] - 0x80) <<  6) +  (s[1] - 0x80)};
				s += 2;
			}
			else if (code < 0xF8) {
				d* = DWord{((code - 0xF0) << 18) + ((s[0] - 0x80) << 12) + ((s[1] - 0x80) << 6) + (s[2] - 0x80)};
				s += 3;
			}
			
			d++;
		}
		
		dest.Length = d - dest.SysDataPointer;
	}
}